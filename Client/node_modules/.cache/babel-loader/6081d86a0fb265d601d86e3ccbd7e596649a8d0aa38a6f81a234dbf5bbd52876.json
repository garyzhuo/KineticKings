{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Coding\\\\kinetickings\\\\Client\\\\src\\\\pages\\\\ExerciseDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box } from '@mui/material';\nimport { exerciseOptions, fetchData, youtubeOptions } from '../utils/fetchData';\nimport Detail from '../components/Detail';\nimport ExerciseVideos from '../components/ExerciseVideos';\nimport SimilarExercises from '../components/SimilarExercises';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseDetail = () => {\n  _s();\n  const [exerciseDetail, setExerciseDetail] = useState({});\n  const [exerciseVideos, setExerciseVideos] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      const exerciseDbUrl = 'https://exercisedb.p.rapidapi.com';\n      const youtubeSearchUrl = 'https://youtube-search-and-download.p.rapidapi.com';\n      const exerciseDetailData = await fetchData(`${exerciseDbUrl}/exercises/exercise/${id}`, exerciseOptions);\n      console.log(exerciseDetailData);\n      setExerciseDetail(exerciseDetailData);\n      const exerciseVideoData = await fetchData(`${youtubeSearchUrl}/serach?query=\n            ${exerciseDetailData.name}`, youtubeOptions);\n      setExerciseVideos(exerciseVideoData);\n    };\n    fetchExercisesData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Detail, {\n      exerciseDetail: exerciseDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseVideos, {\n      exerciseVideos: exerciseVideos,\n      name: exerciseDetail.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimilarExercises, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ExerciseDetail, \"k4Kg/i0MtoHIovdZtM+2q7E3bnk=\", false, function () {\n  return [useParams];\n});\n_c = ExerciseDetail;\nexport default ExerciseDetail;\nvar _c;\n$RefreshReg$(_c, \"ExerciseDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Box","exerciseOptions","fetchData","youtubeOptions","Detail","ExerciseVideos","SimilarExercises","jsxDEV","_jsxDEV","ExerciseDetail","_s","exerciseDetail","setExerciseDetail","exerciseVideos","setExerciseVideos","id","fetchExercisesData","exerciseDbUrl","youtubeSearchUrl","exerciseDetailData","console","log","exerciseVideoData","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Coding/Coding/kinetickings/Client/src/pages/ExerciseDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { Box } from '@mui/material'\r\nimport { exerciseOptions, fetchData, youtubeOptions } from '../utils/fetchData';\r\n\r\nimport Detail from '../components/Detail';\r\nimport ExerciseVideos from '../components/ExerciseVideos';\r\nimport SimilarExercises from '../components/SimilarExercises';\r\n\r\nconst ExerciseDetail = () => {\r\n    const [exerciseDetail, setExerciseDetail] = useState({})\r\n    const [exerciseVideos, setExerciseVideos] = useState([])\r\n    const { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        const fetchExercisesData = async () => {\r\n            const exerciseDbUrl = 'https://exercisedb.p.rapidapi.com';\r\n            const youtubeSearchUrl = 'https://youtube-search-and-download.p.rapidapi.com';\r\n\r\n            const exerciseDetailData = await fetchData(`${exerciseDbUrl}/exercises/exercise/${id}`, exerciseOptions);\r\n            console.log(exerciseDetailData)\r\n            setExerciseDetail(exerciseDetailData);\r\n\r\n            const exerciseVideoData = await fetchData(`${youtubeSearchUrl}/serach?query=\r\n            ${exerciseDetailData.name}`, youtubeOptions);\r\n\r\n            setExerciseVideos(exerciseVideoData)\r\n        }\r\n        fetchExercisesData();\r\n    }, [id]);\r\n\r\n    return (\r\n        <Box>\r\n            <Detail exerciseDetail={exerciseDetail} />\r\n            <ExerciseVideos exerciseVideos={exerciseVideos} name={exerciseDetail.name} />\r\n            <SimilarExercises />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ExerciseDetail"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,eAAe,EAAEC,SAAS,EAAEC,cAAc,QAAQ,oBAAoB;AAE/E,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM;IAAEiB;EAAG,CAAC,GAAGhB,SAAS,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACZ,MAAMmB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,aAAa,GAAG,mCAAmC;MACzD,MAAMC,gBAAgB,GAAG,oDAAoD;MAE7E,MAAMC,kBAAkB,GAAG,MAAMjB,SAAS,CAAE,GAAEe,aAAc,uBAAsBF,EAAG,EAAC,EAAEd,eAAe,CAAC;MACxGmB,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAAC;MAC/BP,iBAAiB,CAACO,kBAAkB,CAAC;MAErC,MAAMG,iBAAiB,GAAG,MAAMpB,SAAS,CAAE,GAAEgB,gBAAiB;AAC1E,cAAcC,kBAAkB,CAACI,IAAK,EAAC,EAAEpB,cAAc,CAAC;MAE5CW,iBAAiB,CAACQ,iBAAiB,CAAC;IACxC,CAAC;IACDN,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAER,oBACIP,OAAA,CAACR,GAAG;IAAAwB,QAAA,gBACAhB,OAAA,CAACJ,MAAM;MAACO,cAAc,EAAEA;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CpB,OAAA,CAACH,cAAc;MAACQ,cAAc,EAAEA,cAAe;MAACU,IAAI,EAAEZ,cAAc,CAACY;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7EpB,OAAA,CAACF,gBAAgB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA7BKD,cAAc;EAAA,QAGDV,SAAS;AAAA;AAAA8B,EAAA,GAHtBpB,cAAc;AA+BpB,eAAeA,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}