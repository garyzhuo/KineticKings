{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Coding\\\\kinetickings\\\\Client\\\\src\\\\components\\\\Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Exercises = _ref => {\n  _s();\n  let {\n    exercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 9;\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (e, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n  console.log(exercises);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: '100px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '110px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      mt: \"100px\",\n      alignItems: \"center\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Exercises, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","jsxDEV","_jsxDEV","Exercises","_ref","_s","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","value","window","scrollTo","top","behavior","console","log","id","sx","mt","lg","p","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","xs","flexWrap","justifyContent","map","exercise","index","alignItems","length","color","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["D:/Coding/Coding/kinetickings/Client/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { Box, Stack, Typography } from '@mui/material';\r\n\r\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\r\nimport ExerciseCard from './ExerciseCard';\r\n\r\n\r\nexport const Exercises = ({ exercises, setExercises, bodyPart }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const exercisesPerPage = 9;\r\n\r\n    const indexOfLastExercise = currentPage * exercisesPerPage;\r\n\r\n    const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n    const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise)\r\n\r\n    const paginate = (e, value) => {\r\n        setCurrentPage(value);\r\n\r\n        window.scrollTo({\r\n            top: 1800, behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    console.log(exercises);\r\n    return (\r\n        <Box id='exercises'\r\n            sx={{\r\n                mt: { lg: '100px' }\r\n            }}\r\n            mt=\"50px\"\r\n            p=\"20px\"\r\n        >\r\n            <Typography\r\n                variant='h3'\r\n                mb='46px'\r\n            >\r\n                Showing Results\r\n            </Typography>\r\n            <Stack direction='row' sx={{ gap: { lg: '110px', xs: '50px' } }}\r\n                flexWrap=\"wrap\" justifyContent=\"center\">\r\n                {exercises.map((exercise, index) => (\r\n                    <ExerciseCard key={index} exercise={exercise} />\r\n                ))}\r\n\r\n            </Stack>\r\n            <Stack mt='100px' alignItems='center'>\r\n                {exercises.length > 9 && (\r\n                    <Pagination\r\n                        color='standard'\r\n                        shape='rounded'\r\n                        defaultPage={1}\r\n                        count={Math.ceil(exercises.length / exercisesPerPage)}\r\n                        page={currentPage}\r\n                        onChange={paginate}\r\n                        size='large'\r\n                    />\r\n                )}\r\n            </Stack>\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default Exercises;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}